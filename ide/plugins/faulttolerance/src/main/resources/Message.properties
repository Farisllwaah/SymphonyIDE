#Wed Jan 15 21:15:02 GMT 2014
LIMIT_EXPRESSION=Limit \= [] e\: {| fault |} @ e -> Limit
FOLDER_NAME=faulttolerance
LIMITED_FAULT_TOLERANCE_JOB=Limited fault tolerance verification for %s
DIVERGENCE_FREE_SEMIFAIR_ERROR=The system defined by process %s is NOT divergence-free, nor semifair.
FULL_FAULT_TOLERANCE_SUCCESS=No system should be full fault tolerant. Check design of %s.
UNABLE_TO_CREATE_FAULT_TOLERANCE_PROCESSES_FILE=Unable to create fault-tolerance processes file for %s.
SEMIFAIR_SUCCESS=The system defined by process %s is semifair.
MARKER_LOCATION=line %d
LIMITED_FAULT_TOLERANCE_ERROR=The system defined by process %s is NOT fault tolerant with the given limit (%s).
STARTING_FAULT_TOLERANCE_FILES_MANAGEMENT=Managing fault tolerance files for %s
LIMIT_EXPRESSION_DIALOG_TITLE=Limit expression to verify fault tolerance of %s
CHECKING_PREREQUISITES=Checking fault tolerance verification prerequisites...
UNABLE_TO_CREATE_FAULT_TOLERANCE_BASE_FILE=Unable to create fault-tolerance verification base file (while verifying %s).
NO_PROJECT_SELECTED=No project is selected.
FULL_FAULT_TOLERANCE_ERROR=The system defined by process %s is not full fault tolerant.
LIMIT_EXPRESSION_DIALOG_MESSAGE=Define the expression that describes the process Limit that will be used to verify fault tolerance of %s.
DIVERGENCE_FREE_ERROR=The system defined by process %s is NOT divergence-free.
BASE_CML_FILE_NAME=faultToleranceBase.cml
BASE_CML_TEMPLATE=\
chansets\r\n\
    \tF \= {| fault |}\r\n\
    \tE \= {| fault, error, failure |}\r\n\
    \t--H \= dunion({ErrorDetectionChannels, \r\n\
    \t--            \tRecoveryChannels, \r\n\
    \t--            \tOperationChannels})\r\n\
\r\n\
process RunE \= \r\n\
begin\
    \t@ [] e\: E @ e -> RunE\r\n\
end\
\r\n\
process ChaosE \= \r\n\
begin\r\n\
  \t@ Chaos [| E |] RunE\r\n\
end\r\n
CML_PROCESSES_FILE_NAME=faultTolerance-%s.cml
CML_PROCESSES_TEMPLATE=\
process NoFaults_%1$s \= \r\n\
begin\r\n\
  \t@ (System_%1$s \\\\ H) [| E |] Stop \r\n\
end\r\n\r\n\
\
process Lazy_%1$s \= \r\n\
begin\r\n\
  \t@ ((System_%1$s \\\\ H) [| E |] ChaosE) \\\\ E \r\n\
end\r\n\r\n\
\
process Limit_%1$s \= \r\n\
begin\r\n\
  \t@ [] e\: F @ e -> Limit_%1$s\r\n\
end\r\n\r\n\
\
process LazyLimit_%1$s \= \r\n\
begin\r\n\
  \t@ (((System_%1$s \\\\ H) [| E |] Limit_%1$s) [| E |] ChaosE) \\\\ E \r\n\
end\r\n
LIMIT_PROCESS_NAME=Limit_%1$s
STARTING_MODEL_CHECKING=Model-checking for %s...
UNABLE_TO_CREATE_FAULT_TOLERANCE_FOLDER=Unable to create fault-tolerance verifications folder (when verifying %s).
SEMIFAIR_ERROR=The system defined by process %s is NOT semifair.
FILES_MANAGEMENT_JOB=Files management for %s
SEMIFAIRNESS_VERIFICATION=Semifairness verification
SEMIFAIRNESS_JOB=Semifairness verification for %s
FULL_FAULT_TOLERANCE_JOB=Full fault tolerance verification for %s
DIVERGENCE_FREE_SUCCESS=The system defined by process %s is divergence-free.
LIMITED_FAULT_TOLERANCE_SUCCESS=The system defined by process %s is fault tolerant with the given limit (%s).
DIVERGENCE_FREE_JOB=Divergence-free verification for %s
