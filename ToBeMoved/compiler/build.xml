<project name="COMPASS CML Compiler" default="compile-lexer-parser" basedir=".">
    <description>
      The COMPASS CML Compiler build script.
    </description>


  <!-- 
       Set global properties for this build. Global properties follows
       the following naming scheme for easy reference:
       <build-file-name>.<property-name>.
       
       E.g. properties in this file are named as build.src, build.dist
       etc.
  -->
  <property name="build.build.dir"          location="target/ant/build"/>
  <property name="ast.dir"                  location="../../../astV2/core/ast/target"/>
  <property name="build.dist.dir"           location="dist"/>
  <property name="build.generated.dir"      location="src/main/java"/>
  <property name="build.package"             value="eu/compassresearch/cml/compiler/"/>
  <property name="build.package.dir"         location="${build.generated.dir}/${build.package}"/>

  <property name="build.lexer.cmd.jlex" value="/usr/bin/jflex"/>
  <property name="build.lexer.dir"      value="./Lexer/"/>
  <property name="build.lexer.file"     value="cml.lex"/>
  <property name="build.lexer.output.file"    value="${build.package.dir}/CmlLexer.java"/>

  <property name="build.parser.cmd.bison"      value="/usr/local/bin/bison"/>
  <property name="build.parser.dir"            location="Parser"/>
  <property name="build.parser.file"           value="cml.y"/>
  <property name="build.parser.classpath"      value="${build.build.dir}:${ast.dir}"/>
  <property name="build.parser.output.file"    value="${build.package.dir}/CmlParser.java"/>

  <path id="ast">
    <fileset dir="${ast.dir}">
        <include name="*.jar" />
    </fileset>
  </path>

  <!--
    Create necessary output directories.
    -->
  <target name="-init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.build.dir}"/>
    <mkdir dir="${build.package.dir}"/>
  </target>

  <!--
      Public targets
  -->
  <target name="generate-lexer" depends="-init">
    <exec executable="${build.lexer.cmd.jlex}" dir="${build.lexer.dir}" failonerror="true">
      <arg value="${build.lexer.file}"/>
    </exec>
    <move file="${build.lexer.dir}/CmlLexer.java" tofile="${build.lexer.output.file}"/>
    <copy file="${build.lexer.dir}/Position.java" tofile="${build.package.dir}/Position.java"/>
  	<copy file="${build.lexer.dir}/ParserError.java" tofile="${build.package.dir}/ParserError.java"/>
  </target>
  
  <target name="generate-parser" depends="-init">
     <exec executable="${build.parser.cmd.bison}" failonerror="true">
      <arg value="${build.parser.dir}/${build.parser.file}"/>
      <arg value="-o"/>
      <arg value="${build.parser.output.file}"/>
      <arg value="-S"/>
      <arg value="${build.parser.dir}/cmlskeleton.java.m4"/>
      <arg value="-v"/>
      <arg value="--report-file"/>
      <arg value="${build.parser.dir}/cml.output"/>
    </exec>
  </target>
  
  <target name="compile-lexer-parser" depends="generate-lexer, generate-parser">
    <javac srcdir="${build.generated.dir}" destdir="${build.build.dir}">
      <classpath refid="ast" />
    </javac>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build.build.dir}"/>
    <delete dir="${build.dist}"/>
    <delete dir="${build.generated.dir}"/>
  </target>

</project>