/*  CML_{0} example from CML Definition 0 document v. 1.0 */
  types
    public Byte = nat
    inv n == (n <= 255);

  functions
    oflow (i,j : Byte) b : bool
    post b = ( i+j > 255);

    uflow (i,j : Byte) b : bool
    post b = (i-j < 0)
 

  channels
   init, overflow, underflow;
   read, load, add, sub : Byte

  chansets
   I = {| init, overflow, underflow, read, load, add, sub |}


process RegisterProc = 
 begin
	
  state 
  reg : Byte	

  operations  
   INIT()
   frame wr reg : Byte
   post reg = 0;

   LOAD(i : Byte)
   frame wr reg : Byte
   post reg = i;

   READ() j : Byte
   frame rd reg : Byte
   post j = reg;

   ADD(i:Byte)
   frame wr reg : Byte
   pre not oflow(reg, i)
   post reg = reg~ + i;

   SUB(i : Byte)
   frame wr reg : Byte
   pre not uflow(reg,i)
   post reg = reg~ - i
  
  actions
   
   REG = 
     (load?i -> LOAD(i) ; REG)
     []
     (dcl j: Byte @ j := READ(); read!j -> REG)
     [] 
     (add?i -> ( ([oflow(reg,i)] & overflow -> INIT(); REG)
       	     	 [] 
		 ([not oflow(reg,i)] & ADD(i);REG)))
     [] 
     (sub?i -> ( ([uflow(reg,i)] & underflow -> INIT(); REG)
       	     	 [] 
		 ([not uflow(reg,i)] & SUB(i); REG)))
   @
     init -> INIT(); REG
 end
