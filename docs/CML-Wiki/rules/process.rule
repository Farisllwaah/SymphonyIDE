== process ==
[[process]] := 
'''begin''' , {[[process paragraph]]} , ['''state''' , [[instance variable declaration]]] , {[[process paragraph]]} , '''@''' , [[action]] , '''end'''
| [[process]] , ''';''' , [[process]]
| [[process]] , '''[]''' , [[process]]
| [[process]] , '''|\mytilde|''' , [[process]]
| [[process]] , '''[|''' , [[chanset expression]] , '''|]''' , [[process]]
| [[process]] , '''[''' , [[chanset expression]] , '''||''' , [[chanset expression]] , ''']''' , [[process]]
| [[process]] , '''||''' , [[process]]
| [[process]] , '''|||''' , [[process]]
| [[process]] , '''/''' , [[[expression]]] , '''\mybackslash''' , [[process]]
| [[process]] , '''[''' , [[[expression]]] , '''>''' , [[process]]
| [[process]] , '''\mybackslash''' , [[chanset
    expression]]
| [[process]] , '''startsby''' , [[expression]]
| [[process]] , '''endsby''' , [[expression]]
| '''(''' , [[declaration]] , '''@''' , [[process
    definition]] , ''')''' , '''(''' , {[[expression]]} , ''')'''
| [[identifier]] , ['''(''' , {[[expression]]} , ''')''']
| [[process]] , [[renaming expression]]
| ''';''' , [[replication declaration]] , '''@''' , [[process]]
| '''[]''' , [[replication declaration]] , '''@''' , [[process]]
| '''|\mytilde|''' , [[replication declaration]] , '''@''' , [[process]]
| '''[|''' , [[chanset expression]] , '''|]''' , [[replication declaration]] , '''@''' , [[process]]
| '''||''' , [[replication declaration]] , '''@''' , '''[''' , [[chanset expression]] , ''']''' , [[process]]
| '''||''' , [[replication declaration]] , '''@''' , [[process]]
| '''|||''' , [[replication declaration]] , '''@''' , [[process]]
| '''(''' , [[process]] , ''')'''

<pre>
\RuleDef{process}{
\Literal{begin}, \Sequence{\RuleRef{process paragraph}}, 
\Optional{
\Literal{state}, \RuleRef{instance variable declaration}
}, \Sequence{\RuleRef{process paragraph}}, \Literal{@}, \RuleRef{action}, \Literal{end}
\Alt\ \RuleRef{process}, \Literal{;}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{[]}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{|\mytilde|}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{[|}, \RuleRef{chanset expression}, \Literal{|]}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{[}, \RuleRef{chanset expression}, \Literal{||}, \RuleRef{chanset expression}, \Literal{]}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{||}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{|||}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{/}, 
\Optional{
\RuleRef{expression}
}, \Literal{\mybackslash}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{[}, 
\Optional{
\RuleRef{expression}
}, \Literal{>}, \RuleRef{process}
\Alt\ \RuleRef{process}, \Literal{\mybackslash}, \RuleRef{chanset
    expression}
\Alt\ \RuleRef{process}, \Literal{startsby}, \RuleRef{expression}
\Alt\ \RuleRef{process}, \Literal{endsby}, \RuleRef{expression}
\Alt\ \Literal{(}, \RuleRef{declaration}, \Literal{@}, \RuleRef{process
    definition}, \Literal{)}, \Literal{(}, \Sequence{\RuleRef{expression}}, \Literal{)}
\Alt\ \RuleRef{identifier}, 
\Optional{
\Literal{(}, \Sequence{\RuleRef{expression}}, \Literal{)}
}
\Alt\ \RuleRef{process}, \RuleRef{renaming expression}
\Alt\ \Literal{;}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{[]}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{|\mytilde|}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{[|}, \RuleRef{chanset expression}, \Literal{|]}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{||}, \RuleRef{replication declaration}, \Literal{@}, \Literal{[}, \RuleRef{chanset expression}, \Literal{]}, \RuleRef{process}
\Alt\ \Literal{||}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{|||}, \RuleRef{replication declaration}, \Literal{@}, \RuleRef{process}
\Alt\ \Literal{(}, \RuleRef{process}, \Literal{)}
}
</pre>

[[Category:Rule]]