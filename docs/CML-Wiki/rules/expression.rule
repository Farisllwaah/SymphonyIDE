== expression ==
;[[expression]] <nowiki>:=</nowiki> 
[[bracketed expression]]
;| [[let expression]]
;| [[if expression]]
;| [[cases expression]]
;| [[unary expression]]
;| [[binary expression]]
;| [[quantified expression]]
;| [[set enumeration]]
;| [[set comprehension]]
;| [[set range expression]]
;| [[sequence enumeration]]
;| [[sequence comprehension]]
;| [[subsequence]]
;| [[map enumeration]]
;| [[map comprehension]]
;| [[tuple constructor]]
;| [[record constructor]]
;| [[apply]]
;| [[field select]]
;| [[tuple select]]
;| [[lambda expression]]
;| [[self expression]]
;| [[general is expression]]
;| [[precondition expression]]
;| [[isofclass expression]]
;| [[name]]
;| [[old name]]
;| [[symbolic literal]]

<pre>
\RuleDef{expression}{
\RuleRef{bracketed expression}
\Alt\ \RuleRef{let expression}
\Alt\ \RuleRef{if expression}
\Alt\ \RuleRef{cases expression}
\Alt\ \RuleRef{unary expression}
\Alt\ \RuleRef{binary expression}
\Alt\ \RuleRef{quantified expression}
\Alt\ \RuleRef{set enumeration}
\Alt\ \RuleRef{set comprehension}
\Alt\ \RuleRef{set range expression}
\Alt\ \RuleRef{sequence enumeration}
\Alt\ \RuleRef{sequence comprehension}
\Alt\ \RuleRef{subsequence}
\Alt\ \RuleRef{map enumeration}
\Alt\ \RuleRef{map comprehension}
\Alt\ \RuleRef{tuple constructor}
\Alt\ \RuleRef{record constructor}
\Alt\ \RuleRef{apply}
\Alt\ \RuleRef{field select}
\Alt\ \RuleRef{tuple select}
\Alt\ \RuleRef{lambda expression}
\Alt\ \RuleRef{self expression}
\Alt\ \RuleRef{general is expression}
\Alt\ \RuleRef{precondition expression}
\Alt\ \RuleRef{isofclass expression}
\Alt\ \RuleRef{name}
\Alt\ \RuleRef{old name}
\Alt\ \RuleRef{symbolic literal}
}
</pre>

[[Category:Rule]]