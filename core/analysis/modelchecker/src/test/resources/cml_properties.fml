    // Deadlock property
	//Deadlock := reachable(State(st,L)),fail trans(State(st,L),_,_), L != Skip. 
    //Deadlock := reachable(State(st,L)),fail trans(State(st,L),ev,_), ev != tock, L != Skip, trans(State(st,L),tock,State(st,L)). 
    Deadlock := reachable(State(st,L)),fail RecoverBody(State(st,L),_), fail trans(State(st,L),_,_), L != Skip.
    Deadlock := reachable(State(st,L)),fail RecoverBody(State(st,L),_), fail trans(State(st,L),ev,_), ev != tock, L != Skip, trans(State(st,L),tock,State(st,L)).


    //Livelock property
    // Capturing tau-loops
    tauPath      ::= (iS:State,fS:State).
    tauPath(P,Q) :- trans (P,tau,Q).
    tauPath(P,Q) :- tauPath(P,S),tauPath(S,Q).
    Livelock := tauPath(L,L). 

    // Nondeterminism property
    accepts    ::= (iS:State,ev:SigmaTauTock).
    accepts(P, ev) :- trans(P,ev,_), ev != tau.
    accepts(P, ev) :- trans(P,tau,R),accepts(R,ev).
    
	reachable    ::= (fS:State).
	//The initial binding is captured at initialisation
    //reachable(State(b,PBody)) :- State(b,PBody), GivenProc(P),ProcDef(P,pPar,PBody).
	//reachable(Q)  :- GivenProc(P),ProcDef(P,pPar,PBody), trans(State(_,PBody),_,Q).
	//reachable(Q)  :- reachable(R), trans(R,_,Q).
    reachable(State(b,PBody)) :- State(b,PBody), GivenProc(P),ProcDef(P,pPar,PBody).
    reachable(State(b,realBody)) :- reachable(State(b,P)), RecoverBody(State(b,P),realBody).
	reachable(Q)  :- reachable(R), trans(R,_,Q).    

	
	//s^<a> \in traces(P) <=> reachable(PBody,L), accepts(L,a,_)
	//(s,{a}) \in failures(P) <=> reachable(PBody,L), fail accepts(L,a,_)
    Nondeterminism := trans(L,ev1,S1),trans(L,ev1,S2), S1 != S2, 
						accepts(S1,ev), ev!= tau, fail accepts(S2,ev),
						reachable(S1),reachable(S2).
	
    //Chaos := GivenProc(name),ProcDef(name,params,body), trans(_,_,State(_,Chaos)).
