types
  Meter :: device : Device
  Box :: m : Meter

class Device = begin
operations
  public op : () ==> ()
  op() == Skip
end

process SmartGrid = begin
operations
  other : () ==> ()
  other() == Skip

actions
  OK_SIMPLE = other()
  
  OK_OBJ =
    (dcl m : Meter @
      m.device.op())

  OK_MAP =
    (dcl m_map : map nat to Meter @
      (dcl dev : Device @
        dev := m_map(1).device;
        dev.op()))


  DEEP_MAP =
    (dcl m_map : map nat to Meter @
      m_map(1).device.op())

  OK_SEQ =
    (dcl ms : seq of Meter @
      (dcl m : Meter @
        m := ms(1);
        m.device.op()))

  DEEP_SEQ =
    (dcl ms : seq of Meter @
      ms(1).device.op())

  DEEP_REC =
    (dcl box : Box @
      box.m.device.op())

/*
  DEEP_TUPLE =
    (dcl pair: Meter * Meter @
      pair.#1.device.op())
*/
@ Skip
end
